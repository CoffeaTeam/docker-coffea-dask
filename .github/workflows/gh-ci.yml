name: Docker build

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

env:
  DOCKER_ORG: coffeateam
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}

jobs:

  matrix-build:
    strategy:
      fail-fast: false
      matrix:
        image_dir: [dask, dask-cc7, dask-cc7-gateway, dask-almalinux8]
        # Keep this line in sync with 
        python: [3.8, 3.9, '3.10']
        exclude:
          - image_dir: dask-cc7
            python: 3.8
          - image_dir: dask-almalinux8
            python: 3.8
          - image_dir: dask-cc7-gateway
            python: 3.8
          - image_dir: dask-cc7
            python: 3.9
          - image_dir: dask-almalinux8
            python: 3.9
          - image_dir: dask-cc7-gateway
            python: 3.9            
    name: ${{ matrix.image_dir }}-${{ matrix.python }}
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: github.event_name == 'push'
      with:
        username: ${{ secrets.DOCKERHUB_ACCOUNT }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    #- name: Login to GitHub Container Registry
    #  uses: docker/login-action@v1
    #  if: github.event_name == 'push'
    #  with:
    #    registry: ghcr.io
    #    username: ${{ github.actor }}
    #    password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate tags
      id: tags
      env:
        image_dir: ${{ matrix.image_dir }}
        PYTHON: ${{ matrix.python }}
      run: |
        image_tag=$(eval echo eval "$(grep FROM dask/Dockerfile | cut -d ' ' -f 2)")
        BUILD=$(git rev-parse --short HEAD)
        version=${image_tag}-g${BUILD}
        image="coffeateam/coffea-${image_dir}"
        tag="${image}:${version}
        tags=${image}:latest-py${matrix.python},$tag

        echo "::set-output name=tags::${tags}"
        echo "::set-output name=tag::${tag}"

    - name: Build and push
      uses: docker/build-push-action@v3.0.0
      with:
        context: ${{ matrix.image_dir }}
        file: ${{ matrix.image_dir }}/py${{ matrix.python}}.Dockerfile
        push: ${{  github.event_name == 'push' }}
        platforms: linux/amd64
        tags: ${{ steps.tags.outputs.tags }}
        build-args: |
          python=${{ matrix.python }}
